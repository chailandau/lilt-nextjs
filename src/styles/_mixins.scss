@use 'sass:math';

// typography
@mixin font-recharge-bold {
    font-family: 'Recharge', sans-serif;
    font-weight: 700;
}

@mixin font-rubik-regular {
    font-family: 'Rubik', sans-serif;
    font-weight: 400;
}

@mixin font-rubik-italic {
    font-family: 'Rubik', sans-serif;
    font-weight: 400;
    font-style: italic;
}

@mixin font-rubik-bold {
    font-family: 'Rubik', sans-serif;
    font-weight: 700;
}

@mixin font-rubik-bold-italic {
    font-family: 'Rubik', sans-serif;
    font-weight: 700;
    font-style: italic;
}

@function rem($val) {
    @return calc($val/$base-font-size) + rem;
}

@mixin font($font-size, $leading, $tracking: 0) {
    font-size: calc($font-size / $base-font-size) + rem;
    line-height: calc($leading / $base-font-size) + rem;
    letter-spacing: $tracking + px;
}

// visual
@function color($group, $color) {
    @return map-get(map-get($colors, $group), $color);
}

@function shadow($color) {
    @return map-get($shadows, $color);
}

@function background($color) {
    @return map-get($backgrounds, $color);
}

@function gradient($color) {
    @return map-get($gradients, $color);
}

@function filter-overlay($color) {
    @return map-get($filter-overlays, $color);
}

@mixin border($color: color(neon, blue)) {
    border: 2px solid $color;
    border-radius: rem(20);
    box-shadow: shadow(purple);
    background-color: background(dark-blue);
}

@mixin doubleBorder {
    position: relative;
    border: 2px solid color(neon, blue);
    border-radius: rem(20);
    &:after {
        display: block;
        content: '';
        position: absolute;
        width: 100%;
        height: 100%;
        top: rem(12);
        left: rem(12);
        z-index: -1;
        border-radius: rem(26);
        border: 2px solid color(neon, green);
        background-color: background(dark-blue);
        @include transition(top, left);
        @include mobile-lg {
            top: rem(20);
            left: rem(20);
        }
    }
}

// spacing
@mixin paddingX($padding) {
    padding-left: rem($padding);
    padding-right: rem($padding);
}

@mixin paddingY($padding) {
    padding-top: rem($padding);
    padding-bottom: rem($padding);
}

@mixin marginX($margin) {
    @if $margin == 'auto' {
        margin-left: auto;
        margin-right: auto;
    } @else {
        margin-left: rem($margin);
        margin-right: rem($margin);
    }
}

@mixin marginY($margin) {
    @if $margin == 'auto' {
        margin-top: auto;
        margin-bottom: auto;
    } @else {
        margin-top: rem($margin);
        margin-bottom: rem($margin);
    }
}

// animation
@mixin transition($properties...) {
    $transition: ();
    @each $property in $properties {
        $transition: append($transition, ($property 0.5s ease-in-out), comma);
    }
    transition: $transition;
    @media (prefers-reduced-motion) {
        transition: none;
    }
}

@mixin bgSlideHover($color1, $color2) {
    background: $color2;
    background: linear-gradient(to right, $color2 50%, $color1 50%);
    background-size: 200% 100%;
    background-position: 100% 0%;
    @include transition(background-position);

    @include hover {
        background-position: 0% 0%;
    }
}

@mixin underlineSlideHover($color: color(neutral, white), $padding: 14) {
    position: relative;
    &:before {
        content: '';
        position: absolute;
        width: calc(100% - rem($padding * 2));
        height: rem(1);
        border-radius: rem(2);
        background-color: color(neutral, white);
        left: rem($padding);
        bottom: rem(math.div($padding, 2.25));
        transform-origin: right;
        transform: scaleX(0);
        transition: transform 0.3s ease-in-out;
        @media (prefers-reduced-motion) {
            transition: none;
        }
    }
    @include hover {
        &:before {
            transform-origin: left;
            transform: scaleX(1);
        }
    }
}

// accessibility
@mixin addTargetArea($amount: 14) {
    display: block;
    padding: rem($amount);
    margin: rem(-$amount);
}

@mixin hover {
    &:hover,
    &:focus-visible {
        @content;
    }
}

// media queries
@mixin mobile-lg {
    @media screen and (min-width: 480px) {
        @content;
    }
}

@mixin tablet {
    @media screen and (min-width: 600px) {
        @content;
    }
}

@mixin tablet-lg {
    @media screen and (min-width: 768px) {
        @content;
    }
}

@mixin laptop {
    @media screen and (min-width: 992px) {
        @content;
    }
}

@mixin laptop-lg {
    @media screen and (min-width: 1050px) {
        @content;
    }
}

@mixin desktop-sm {
    @media screen and (min-width: 1200px) {
        @content;
    }
}

@mixin desktop {
    @media screen and (min-width: 1600) {
        @content;
    }
}
